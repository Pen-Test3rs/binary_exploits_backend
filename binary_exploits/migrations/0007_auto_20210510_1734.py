# Generated by Django 3.2 on 2021-05-10 15:34

from django.db import migrations, models
import django.db.models.deletion
import martor.models


class Migration(migrations.Migration):

    dependencies = [
        ('binary_exploits', '0006_auto_20210505_1912'),
    ]

    operations = [
        migrations.CreateModel(
            name='Article',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ordinal', models.IntegerField(blank=True, default=0, verbose_name='kolejność')),
                ('name', models.CharField(default='', max_length=256, verbose_name='tytuł')),
                ('excerpt', models.TextField(default='', max_length=256, verbose_name='fragment')),
                ('content', martor.models.MartorField()),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='articles', to='binary_exploits.category', verbose_name='kategoria')),
            ],
            options={
                'verbose_name': 'artykuł',
                'verbose_name_plural': 'artykuły',
            },
        ),
        migrations.AlterModelOptions(
            name='solution',
            options={'verbose_name': 'rozwiązanie zadania', 'verbose_name_plural': 'rozwiązania zadań'},
        ),
        migrations.RemoveField(
            model_name='solution',
            name='valid',
        ),
        migrations.AddField(
            model_name='task',
            name='attachments',
            field=models.FileField(blank=True, upload_to='', verbose_name='pliki'),
        ),
        migrations.DeleteModel(
            name='Subcategory',
        ),
        migrations.AddField(
            model_name='article',
            name='linked_tasks',
            field=models.ManyToManyField(blank=True, related_name='articles_with_reference', to='binary_exploits.Task'),
        ),
        migrations.AddField(
            model_name='task',
            name='articles',
            field=models.ManyToManyField(blank=True, related_name='tasks_with_reference', to='binary_exploits.Article', verbose_name='artykuły'),
        ),
    ]
