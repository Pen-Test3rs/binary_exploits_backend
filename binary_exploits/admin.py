from django.contrib import admin
from django.contrib.auth.admin import UserAdmin
from django.db import models
from martor.widgets import AdminMartorWidget

from .forms import FileFieldForm
from .models import AppUser, Category, Article, Task, Solution, TaskAttachment, TaskLabel



class ArticleInline(admin.StackedInline):
    model = Article


class CategoryAdmin(admin.ModelAdmin):
    inlines = [ArticleInline]
    list_display = ('name', 'description', 'ordinal')
    formfield_overrides = {
        models.TextField: {'widget': AdminMartorWidget},
    }


class SubcategoryAdmin(admin.ModelAdmin):
    list_display = ('name', 'category', 'ordinal')


class TaskAdmin(admin.ModelAdmin):
    list_display = ('title', 'ordinal')
    formfield_overrides = {
        models.TextField: {'widget': AdminMartorWidget},
    }


class TaskAttachmentAdmin(admin.ModelAdmin):
    form = FileFieldForm

    def save_model(self, request, obj, form, change):
        files = request.FILES.getlist('file')

        if change:
            # we do not support updating files because it changes name of file
            # and we would have to correct links in articles
            raise ValueError("Updating files is not supported")

        for f in files:
            instance = TaskAttachment(file=f)
            instance.save()


admin.site.register(AppUser, UserAdmin)
admin.site.register(Category, CategoryAdmin)
admin.site.register(Article, SubcategoryAdmin)
admin.site.register(Task, TaskAdmin)
admin.site.register(Solution)
admin.site.register(TaskLabel)
admin.site.register(TaskAttachment, TaskAttachmentAdmin)








